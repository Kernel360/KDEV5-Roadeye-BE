services:

  roadeye-hq:
    image: roadeye-api-hq:0.0.1
    container_name: roadeye-hq
    environment:
      OTEL_SERVICE_NAME: "roadeye-hq"
      OTEL_RESOURCE_ATTRIBUTES: "service=roadeye-hq,env=dev"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://collector:4317"
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
      OTEL_INSTRUMENTATION_MICROMETER_ENABLED: true
      SPRING_PROFILES_ACTIVE: local
    ports:
      - "8081:8080"
    depends_on:
      - mysql
      - collector
  roadeye-mdt-log-collector:
    image: roadeye-api-mdt-log-collector:0.0.1
    container_name: roadeye-mdt-log-collector
    environment:
      OTEL_SERVICE_NAME: "roadeye-mdt-log-collector"
      OTEL_RESOURCE_ATTRIBUTES: "service=roadeye-mdt-log-collector,env=dev"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://collector:4317"
      OTEL_EXPORTER_OTLP_PROTOCOL: grpc
      OTEL_INSTRUMENTATION_MICROMETER_ENABLED: true
      SPRING_PROFILES_ACTIVE: local
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - collector

  collector:
    container_name: collector
    image: otel/opentelemetry-collector-contrib:0.123.0
    command:
      - --config=/etc/otelcol-contrib/otel-collector.yml
    volumes:
      - ./docker/collector/otel-collector.yml:/etc/otelcol-contrib/otel-collector.yml
    restart: always
    ports:
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP HTTP receiver
      - 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
    depends_on:
      - loki
      - tempo

  tempo:
    container_name: tempo
    image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yml" ]
    volumes:
      - ./docker/tempo/tempo.yml:/etc/tempo.yml
    restart: always
    ports:
      - "4317"  # otlp grpc
      - "3200"  # tempo as grafana datasource

  loki:
    container_name: loki
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    restart: always
    ports:
      - "3100"

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --enable-feature=exemplar-storage
      - --web.enable-remote-write-receiver
    restart: always
    ports:
      - '9090:9090'
    depends_on:
      - collector

  grafana:
    container_name: grafana
    image: grafana/grafana
    volumes:
      - ./docker/grafana/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - loki
      - tempo

  mysql:
    container_name: mysql
    image: mysql:8.0.40
    restart: always
    environment:
      MYSQL_DATABASE: roadeye
      MYSQL_USER: username
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: rootpassword
    ports:
      - "3306:3306"
